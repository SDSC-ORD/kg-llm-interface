apiVersion: apps/v1
kind: Deployment
metadata:
  name: kg-llm
  namespace: kg-llm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kg-llm
  template:
    metadata:
      labels:
        app: kg-llm
    spec:
      restartPolicy: Always
      containers:
      - name: kg-llm-container
        image: ghcr.io/sdsc-ordes/kg-llm-interface:latest
        env:
        - name: CHROMA_HOST
          value: "servicename.servicenamespace.svc.cluster.local"
        - name: CHROMA_PORT
          value: "0"
        ports:
        - containerPort: 80
      initContainers:
      - name: graphdb-upload-container
        image: ghcr.io/sdsc-ordes/kg-llm-interface:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -e;
            cd /app;
            echo curl -v -u admin:admin -X POST http://${GRAPHDB_SERVICE_NAME}:${GRAPHDB_PORT}/rest/repositories -H 'Content-Type: multipart/form-data' -F config=@/app/graphdb_config.ttl;
            curl -v -u admin:admin -X POST http://${GRAPHDB_SERVICE_NAME}:${GRAPHDB_PORT}/rest/repositories -H 'Content-Type: multipart/form-data' -F config=@/app/graphdb_config.ttl;
            export SPARQL_ENDPOINT=http://${GRAPHDB_SERVICE_NAME}:${GRAPHDB_PORT}/repositories/test;
            mkdir temp;
            cd temp;
            wget -O ontology.nt ${ONTOLOGY};
            wget -O data.nq.gz ${DATA};
            gzip -d data.nq.gz;
            head -n 1000 data.nq > data.nq;
            cd ..;
            poetry run python3 aikg/flows/insert_triples.py /app/temp/ontology.nt;
            poetry run python3 aikg/flows/insert_triples.py /app/temp/data.nq;
        volumeMounts:
          - name: graphdb-config-pvc
            mountPath: /app/graphdb_config.ttl
            subPath: graphdb_config.ttl
        envFrom:
          - configMapRef:
              name: graphdb-config
          - configMapRef:
              name: kg-llm-config
      - name: chromadb-upload-container
        image: ghcr.io/sdsc-ordes/kg-llm-interface:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -e;
            cd /app;
            mkdir temp;
            cd temp;
            wget -O ontology.nt ${ONTOLOGY};
            cd ..;
            poetry run python3 aikg/flows/chroma_build.py;
        envFrom:
          - configMapRef:
              name: chroma-db-config
          - configMapRef:
              name: kg-llm-config
      volumes:
      - name: graphdb-config-pvc
        persistentVolumeClaim:
          claimName: graphdb-config-pvc
      - name: configmap-graphdb
        configMap:
          name: graphdb-config
      - name: configmap-graphdb-repo
        configMap:
          name: graphdb-repo-config
      - name: configmap-chromadb
        configMap:
          name: chroma-db-config
      - name: configmap-kg-llm
        configMap:
          name: kg-llm-config
